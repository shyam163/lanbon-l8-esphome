substitutions:
  device_name: lanbon-l8
  friendly_name: "Lanbon L8"

esphome:
  name: ${device_name}
  platform: ESP32
  board: esp32dev

# Enable logging
logger:
  level: DEBUG

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_encryption_key

ota:
  password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${friendly_name} Fallback"
    password: !secret fallback_password

captive_portal:

# Enable Web server
web_server:
  port: 80

# I2C Bus for touch controller
i2c:
  sda: GPIO21
  scl: GPIO22
  scan: true

# SPI for the display
spi:
  clk_pin: GPIO18
  mosi_pin: GPIO23
  miso_pin: GPIO19

# ST7789V Display (240x320)
display:
  - platform: ili9xxx
    model: ST7789V
    cs_pin: GPIO5
    dc_pin: GPIO27
    reset_pin: GPIO25
    rotation: 90
    lambda: |-
      it.print(0, 0, id(font1), "Lanbon L8");

# Fonts for display
font:
  - file: "fonts/Arial.ttf"
    id: font1
    size: 24

# Touch controller (FT6336U)
touchscreen:
  - platform: ft63x6
    id: lanbon_touchscreen
    interrupt_pin: GPIO26
    on_touch:
      - lambda: |-
          ESP_LOGI("touch", "Touch at (%d, %d)", touch.x, touch.y);

# Binary sensors for touch areas (buttons on screen)
binary_sensor:
  # Button 1 touch area
  - platform: touchscreen
    name: "${friendly_name} Button 1 Touch"
    id: button1_touch
    x_min: 0
    x_max: 80
    y_min: 0
    y_max: 240
    on_press:
      - switch.toggle: relay1

  # Button 2 touch area
  - platform: touchscreen
    name: "${friendly_name} Button 2 Touch"
    id: button2_touch
    x_min: 80
    x_max: 160
    y_min: 0
    y_max: 240
    on_press:
      - switch.toggle: relay2

  # Button 3 touch area
  - platform: touchscreen
    name: "${friendly_name} Button 3 Touch"
    id: button3_touch
    x_min: 160
    x_max: 240
    y_min: 0
    y_max: 240
    on_press:
      - switch.toggle: relay3

# Relays
switch:
  - platform: gpio
    name: "${friendly_name} Relay 1"
    id: relay1
    pin: GPIO32
    restore_mode: RESTORE_DEFAULT_OFF
    on_turn_on:
      - light.turn_on: led1
    on_turn_off:
      - light.turn_off: led1

  - platform: gpio
    name: "${friendly_name} Relay 2"
    id: relay2
    pin: GPIO33
    restore_mode: RESTORE_DEFAULT_OFF
    on_turn_on:
      - light.turn_on: led2
    on_turn_off:
      - light.turn_off: led2

  - platform: gpio
    name: "${friendly_name} Relay 3"
    id: relay3
    pin: GPIO13
    restore_mode: RESTORE_DEFAULT_OFF
    on_turn_on:
      - light.turn_on: led3
    on_turn_off:
      - light.turn_off: led3

# Status LEDs
light:
  - platform: binary
    name: "${friendly_name} LED 1"
    id: led1
    output: output_led1
    internal: true

  - platform: binary
    name: "${friendly_name} LED 2"
    id: led2
    output: output_led2
    internal: true

  - platform: binary
    name: "${friendly_name} LED 3"
    id: led3
    output: output_led3
    internal: true

output:
  - platform: gpio
    pin: GPIO14
    id: output_led1

  - platform: gpio
    pin: GPIO12
    id: output_led2

  - platform: gpio
    pin: GPIO15
    id: output_led3

# Temperature sensor (if available)
sensor:
  - platform: ntc
    sensor: resistance_sensor
    name: "${friendly_name} Temperature"
    calibration:
      b_constant: 3950
      reference_temperature: 25Â°C
      reference_resistance: 10kOhm

  - platform: resistance
    id: resistance_sensor
    sensor: adc_sensor
    configuration: DOWNSTREAM
    resistor: 10kOhm

  - platform: adc
    id: adc_sensor
    pin: GPIO36
    attenuation: 11db
    update_interval: 60s
    internal: true

  # WiFi Signal Strength
  - platform: wifi_signal
    name: "${friendly_name} WiFi Signal"
    update_interval: 60s

  # Uptime
  - platform: uptime
    name: "${friendly_name} Uptime"
    update_interval: 60s

# Text sensors
text_sensor:
  - platform: wifi_info
    ip_address:
      name: "${friendly_name} IP Address"
    ssid:
      name: "${friendly_name} SSID"

  - platform: version
    name: "${friendly_name} ESPHome Version"

# Status LED (Blue LED on board)
status_led:
  pin:
    number: GPIO2
    inverted: false
